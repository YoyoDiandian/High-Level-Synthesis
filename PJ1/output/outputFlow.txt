===== 函数基本信息 =====
函数名: dotprod
返回类型: int
参数: [('a', 'array'), ('b', 'array'), ('n', 'non-array')]
========================

===== 基本块信息 =====
基本块 0:
  下一个基本块: start
  操作列表:
    [0] ['c', 0, '0']
基本块 start:
  下一个基本块: calc
  操作列表:
    [0] ['i', 13, '0', '0', 'i_inc', 'calc']
    [1] ['cl', 13, 'c', '0', 'cr', 'calc']
    [2] ['cond', 11, 'i', 'n']
    [3] ['', 7, 'cond', 'ret', 'calc']
基本块 calc:
  下一个基本块: ret
  操作列表:
    [0] ['ai', 5, 'a', 'i']
    [1] ['bi', 5, 'b', 'i']
    [2] ['ci', 3, 'ai', 'bi']
    [3] ['cr', 1, 'cl', 'ci']
    [4] ['i_inc', 1, 'i', '1']
    [5] ['', 7, 'start']
基本块 ret:
  下一个基本块: None
  操作列表:
    [0] ['', 14, 'cl']
===================

===== 控制流图 (CFG) =====
  0 -> start [条件: true]
  start -> ret [条件: cond]
  start -> calc [条件: not cond]
  calc -> start [条件: true]
=======================

===== 数据流图 (DFG) =====
  基本块 start 的DFG:
    操作 0 -> 2 [值: i]
    操作 2 -> 3 [值: cond]
  基本块 calc 的DFG:
    操作 0 -> 2 [值: ai]
    操作 1 -> 2 [值: bi]
    操作 2 -> 3 [值: ci]
=======================


======= 调度结果 =======
基本块 0 的调度结果:
  周期 0: (操作 0:ASSIGN, 设备 0) 
  周期 1: 
基本块 start 的调度结果:
  周期 0: (操作 0:PHI, 设备 0) (操作 1:PHI, 设备 1) 
  周期 1: 
  周期 2: (操作 2:GE, 设备 0) 
  周期 3: (操作 3:BR, 设备 0) 
  周期 4: 
基本块 calc 的调度结果:
  周期 0: (操作 0:LOAD, 设备 0) (操作 4:ADD, 设备 0) (操作 5:BR, 设备 0) 
  周期 1: 
  周期 2: (操作 1:LOAD, 设备 0) 
  周期 3: 
  周期 4: (操作 2:MUL, 设备 0) 
  周期 5: (操作 3:ADD, 设备 0) 
  周期 6: 
基本块 ret 的调度结果:
  周期 0: (操作 0:RET, 设备 0) 
  周期 1: 
=========================


===== 寄存器分配结果 =====
全局变量寄存器分配:
  c -> r2
  cl -> r0
  cr -> r3
  i -> r1
  i_inc -> r2

基本块 0:
  变量到寄存器的映射:
    c -> r2
    cl -> r0
    cr -> r3
    i -> r1
    i_inc -> r2
基本块 start:
  变量到寄存器的映射:
    c -> r2
    cl -> r0
    cond -> r4
    cr -> r3
    i -> r1
    i_inc -> r2
基本块 calc:
  变量到寄存器的映射:
    ai -> r4
    bi -> r5
    c -> r2
    ci -> r6
    cl -> r0
    cr -> r3
    i -> r1
    i_inc -> r2
基本块 ret:
  变量到寄存器的映射:
    c -> r2
    cl -> r0
    cr -> r3
    i -> r1
    i_inc -> r2
========================

