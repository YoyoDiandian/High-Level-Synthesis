===== 函数基本信息 =====
函数名: gcd
返回类型: int
参数: [('a', 'non-array'), ('b', 'non-array')]
========================

===== 基本块信息 =====
基本块 0:
	下一个基本块: start
	操作列表:
		[0] ['c', 0, 'a']
		[1] ['d', 0, 'b']
基本块 start:
	下一个基本块: cal
	操作列表:
		[0] ['a1', 13, 'c', '0', 'divisor', 'cal']
		[1] ['b1', 13, 'd', '0', 'remainder', 'cal']
		[2] ['a_LE_b', 11, 'a1', 'b1']
		[3] ['', 7, 'a_LE_b', 'cal', 'exchange']
基本块 cal:
	下一个基本块: exchange
	操作列表:
		[0] ['divisor', 13, 'b1', 'start', 'a1', 'exchange']
		[1] ['larger', 13, 'a1', 'start', 'b1', 'exchange']
		[2] ['remainder', 2, 'larger', 'divisor']
		[3] ['cond', 12, 'remainder', '0']
		[4] ['', 7, 'cond', 'ret', 'start']
基本块 exchange:
	下一个基本块: ret
	操作列表:
		[0] ['', 7, 'cal']
基本块 ret:
	下一个基本块: None
	操作列表:
		[0] ['', 14, 'divisor']
===================

===== 控制流图 (CFG) =====
	0 -> start [条件: true]
	start -> cal [条件: a_LE_b]
	start -> exchange [条件: not a_LE_b]
	cal -> ret [条件: cond]
	cal -> start [条件: not cond]
	exchange -> cal [条件: true]
=======================

===== 数据流图 (DFG) =====
	基本块 start 的DFG:
		操作 0 -> 2 [值: a1]
		操作 1 -> 2 [值: b1]
		操作 2 -> 3 [值: a_LE_b]
	基本块 cal 的DFG:
		操作 0 -> 2 [值: divisor]
		操作 1 -> 2 [值: larger]
		操作 2 -> 3 [值: remainder]
		操作 3 -> 4 [值: cond]
=======================

Schedule results:
Basic block 0's schedule results:
  cycle 0: (operation 0, resource 0) 
  cycle 1: (operation 1, resource 0) 
Basic block start's schedule results:
  cycle 0: (operation 0, resource 0) 
  cycle 1: (operation 1, resource 0) 
  cycle 2: (operation 2, resource 0) 
  cycle 3: (operation 3, resource 0) 
Basic block cal's schedule results:
  cycle 0: (operation 0, resource 0) 
  cycle 1: (operation 1, resource 0) 
  cycle 2: (operation 2, resource 0) 
  cycle 3: (operation 3, resource 0) 
  cycle 4: (operation 4, resource 0) 
Basic block exchange's schedule results:
  cycle 0: (operation 0, resource 0) 
Basic block ret's schedule results:
  cycle 0: (operation 0, resource 0) 
-----------------------------------
Input variables:
Basic block 0:
No input variables in this block.  
Basic block start:
d  c  
Basic block cal:
No input variables in this block.  
Basic block exchange:
No input variables in this block.  
Basic block ret:
No input variables in this block.  
-----------------------------------
Output variables:
Basic block 0:
d  c  
Basic block start:
No output variables in this block.  
Basic block cal:
No output variables in this block.  
Basic block exchange:
No output variables in this block.  
Basic block ret:
No output variables in this block.  
-----------------------------------
Global Variables:
a  divisor  a1  b1  b  remainder
-----------------------------------
Getting Local Variable Liveness:
Basic block 0: 
  cycle 0, there's no variable living in this cycle.
  cycle 1, variable	c	is living.
  cycle 2, variable	d, c	is living.
Basic block start: 
  cycle 0, variable	d, c	is living.
  cycle 1, variable	d	is living.
  cycle 2, there's no variable living in this cycle.
  cycle 3, variable	a_LE_b	is living.
  cycle 4, there's no variable living in this cycle.
Basic block cal: 
  cycle 0, there's no variable living in this cycle.
  cycle 1, there's no variable living in this cycle.
  cycle 2, variable	larger	is living.
  cycle 3, there's no variable living in this cycle.
  cycle 4, variable	cond	is living.
  cycle 5, there's no variable living in this cycle.
Basic block exchange: 
  cycle 0, there's no variable living in this cycle.
  cycle 1, there's no variable living in this cycle.
Basic block ret: 
  cycle 0, there's no variable living in this cycle.
  cycle 1, there's no variable living in this cycle.
-----------------------------------
Getting Living Period for every local variable:
Basic block 0: 
  Variable	c	lives from cycle 1 to cycle 2
  Variable	d	lives from cycle 2 to cycle 2
Basic block start: 
  Variable	d	lives from cycle 0 to cycle 1
  Variable	c	lives from cycle 0 to cycle 0
  Variable	a_LE_b	lives from cycle 3 to cycle 3
Basic block cal: 
  Variable	larger	lives from cycle 2 to cycle 2
  Variable	cond	lives from cycle 4 to cycle 4
Basic block exchange: 
  No variable living in this basic block.
Basic block ret: 
  No variable living in this basic block.
-----------------------------------
Coloring Register by using Left-Edge Algorithm, after Aligning:
Basic block 0: 
  Register 0:
    stores variable	c	from cycle 1 to cycle 2
  Register 1:
    stores variable	d	from cycle 2 to cycle 2
Basic block start: 
  Register 0:
    stores variable	c	from cycle 0 to cycle 0
    stores variable	a_LE_b	from cycle 3 to cycle 3
  Register 1:
    stores variable	d	from cycle 0 to cycle 1
Basic block cal: 
  Register 0:
    stores variable	larger	from cycle 2 to cycle 2
    stores variable	cond	from cycle 4 to cycle 4
  Register 1:
Basic block exchange: 
  Register 0:
  Register 1:
Basic block ret: 
  Register 0:
  Register 1:
-----------------------------------
